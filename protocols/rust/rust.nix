{ base, pkgs, protobuf, rustProtoCompiler, includeServices }:

base.languages.rust.mkUtility {
  inherit rustProtoCompiler;
  name = "rust-protobuf-definitions";
  PROTOC = "${protobuf}/bin/protoc";

  src = ../.;

  configurePhase = "";

  buildPhase = ''
    $rustProtoCompiler/bin/rust-protobuf-compiler -I ./ ${if includeServices then "--build-services" else ""} -o ./gbk-protocols/src **/*.proto
    substitute rust/Cargo.toml ./gbk-protocols/Cargo.toml --subst-var-by includeTonic ${if includeServices then "'tonic = \"0.3\"'" else "''"}

    # generate a useable lib.rs
    echo "// Generated by firm, do not edit" > ./gbk-protocols/src/lib.rs
    shopt -s extglob
    shopt -s globstar
    shopt -s nullglob
    for f in ./gbk-protocols/src/**/!(lib).rs; do
      echo "pub mod $(basename "$f" .rs);" >> ./gbk-protocols/src/lib.rs
    done
    ${if includeServices then "echo 'pub use tonic;' >> ./gbk-protocols/src/lib.rs" else "" }
  '';

  checkPhase = ''
    # check that it works
    export CARGO_HOME=$PWD
    cargo build --manifest-path=./gbk-protocols/Cargo.toml
    rm -rf ./gbk-protocols/target ./gbk-protocols/Cargo.lock
  '';

  installPhase = ''
    mkdir -p $out
    cp -r gbk-protocols/* $out/
  '';
}
