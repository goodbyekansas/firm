syntax = "proto3";

package execution;

import "functions/functions.proto";


service Execution {
  rpc Execute (ExecutionParameters) returns (ExecutionResult);
}


message ExecutionParameters {
  functions.Function function = 1;
  repeated InputValue arguments = 2;
}


message InputValues {
  repeated InputValue values = 1;
}


message InputValue {
  string name = 1;
  functions.Type type = 2;
  bytes value = 3; // TODO: Fix list of thigns. Maybe use one of repeated bytes or just bytes
}


/*
TODO big brain üß† mode over here
message FunctionArgument {
  string name = 1;
  oneof value {
    repeated string strings = 2;
    repeated int ints = 3;
    repeated float floats = 4;
    repeated bool bools = 5;
    repeated bytes bytes = 6;
  }
}
  Return value should also do this and the burn parsing code üóíÔ∏è ‚û°Ô∏è üî•
*/


message ExecutionResult {
  ExecutionId execution_id = 1;
  oneof result {
    ExecutionError error = 2;
    OutputValues ok = 3;
  }
}

message OutputValues {
  repeated OutputValue values = 1;
}


message ExecutionId {
  string uuid = 1;
}


message OutputValue {
  string name = 1;
  functions.Type type = 2;
  bytes value = 3;
}


message ExecutionError {
  string msg = 1;
}


message Context {
  repeated InputValue arguments = 1;
  repeated functions.Attachment attachments = 2;
}
